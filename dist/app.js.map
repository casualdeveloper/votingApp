{"version":3,"file":"app.js","sources":["webpack:///./src/js/newPollOptions.js","webpack:///./src/js/newPollPost.js","webpack:///./src/js/showChart.js","webpack:///./src/js/randomColor.js","webpack:///./src/js/index.js"],"sourcesContent":["/* global $ */\n\nvar options = 2;\n\nvar addOptionBtn = $(\"#addOptionBtn\");\nvar removeOptionBtn = $(\"#removeOptionBtn\");\nvar newPollOptions = $(\"#newPollOptions\");\n\nvar disabled = true;\n\n//Add option when creating new poll\naddOptionBtn.on(\"click\", function () {\n    options++;\n    newPollOptions.append(\"<input class=\\\"form-control\\\" placeholder=\\\"Option \" + options + \"\\\" name=\\\"option\" + options + \"\\\">\");\n    if (disabled) {\n        disabled = false;\n        removeOptionBtn.attr(\"disabled\", false);\n    }\n});\n//Remove option when creating new poll\nremoveOptionBtn.on(\"click\", function () {\n    if (options > 2) {\n        options--;\n        newPollOptions.children().last().remove();\n        if (options == 2) {\n            disabled = true;\n            removeOptionBtn.attr(\"disabled\", true);\n        }\n    }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/newPollOptions.js\n// module id = 0\n// module chunks = 0","/* global $ */\nimport { generateColor } from \"./randomColor\";\n\nvar newPollForm = $(\"#newPollForm\");\n\nnewPollForm.on(\"submit\", function (e) {\n    //To prevent reload\n    e.preventDefault();\n\n    //Get data from Form\n    var data = newPollForm.serializeArray();\n\n    //Extract options from Form\n    var options = [];\n    //begins at 1 to skip the title\n    for (var i = 1; i < data.length; i++) {\n        options.push(data[i].value);\n    }\n\n    //Generate colors, data.length-1 here is to subtract title from length\n    var colors = generateColor(data.length - 1, \"hex\");\n\n    data = {\n        title: data[0].value,\n        options: options,\n        colors: colors\n    };\n\n    //Send data\n    $.ajax({\n        type: \"POST\",\n        url: \"/poll\",\n        data: data,\n        dataType: \"json\",\n        success: function success(data) {\n            // Data here is response from server\n            if (typeof data.redirect === \"string\") {\n                // redirect \n                window.location = data.redirect;\n            }\n        }\n\n    });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/newPollPost.js\n// module id = 1\n// module chunks = 0","/* global poll */\n\nimport Chart from \"chart.js/dist/Chart.min.js\";\n\n(function () {\n\n    var ctx = document.getElementById(\"myChart\");\n    //check if myChart exists (it only exists in page that shows chart)\n    if (ctx != null) {\n\n        var jsPoll = poll;\n\n        var data = {\n            labels: jsPoll.options,\n            datasets: [{\n                data: jsPoll.results,\n                backgroundColor: jsPoll.colors,\n                hoverBackgroundColor: jsPoll.colors\n            }]\n        };\n        new Chart(ctx.getContext(\"2d\"), {\n            type: \"doughnut\",\n            data: data,\n            options: {}\n        });\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/showChart.js\n// module id = 2\n// module chunks = 0","// n - amount of colors to make\nfunction generateColor() {\n    var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"hex\";\n\n    var Arr = [];\n\n    if (n <= 0) {\n        Arr.push(\"#000000\");\n    }\n\n    for (var i = 0; i < n; i++) {\n        var color = void 0;\n        var r = Math.round(Math.random() * 255);\n        var g = Math.round(Math.random() * 255);\n        var b = Math.round(Math.random() * 255);\n\n        if (format === \"hex\") {\n            r = fix1CharString(r.toString(16));\n            g = fix1CharString(g.toString(16));\n            b = fix1CharString(b.toString(16));\n            color = \"#\" + r + g + b;\n        } else if (format === \"rgb\") {\n            color = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n        } else if (format === \"rgba\") {\n            color = \"rgba(\" + r + \",\" + g + \",\" + b + \",0)\";\n        } else {\n            throw \"Sorry color format \" + format + \" was not recognized.\\nFormats available: hex, rgb, rgba\";\n        }\n\n        Arr.push(color);\n    }\n    // if requested amount of colors were 1(default) return color string, otherwise return array of color strings\n    return n === 1 ? Arr[0] : Arr;\n}\n\n// Checks if hex string has only 1 char if it does adds 0 to the end\nfunction fix1CharString(a) {\n    return a.length === 1 ? a + \"0\" : a;\n}\n\nexport { generateColor };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/randomColor.js\n// module id = 13\n// module chunks = 0","import \"./showChart\";\nimport \"./newPollOptions\";\nimport \"./newPollPost\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/index.js\n// module id = 14\n// module chunks = 0"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;;;;","sourceRoot":""}