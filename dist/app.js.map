{"version":3,"file":"app.js","sources":["webpack:///./src/js/newPollOptions.js","webpack:///./src/js/newPollPost.js","webpack:///./src/js/showChart.js","webpack:///./src/js/lib/colorInput.js","webpack:///./src/js/lib/randomColor.js","webpack:///./src/js/index.js"],"sourcesContent":["/* global $ */\n\nimport { generateColor } from \"./lib/randomColor\";\nimport colorInput from \"./lib/colorInput\";\n\nvar newColorInput = void 0;\n\nvar options = 2;\n\nvar addOptionBtn = $(\"#addOptionBtn\");\nvar removeOptionBtn = $(\"#removeOptionBtn\");\nvar newPollOptions = $(\"#newPollOptions\");\nvar newPollOptionsColors = $(\".new-poll-option-colorBox-inner\");\n\nvar disabled = true;\n\n//main array of all colors\nvar _COLORS = [];\n\n//Check if user is on new poll page and if so setup base colors(first 2), initialize color input box and setup bindings\n(function () {\n    if (newPollOptionsColors.length <= 0) return null;\n\n    newColorInput = new colorInput();\n\n    bindSetup();\n\n    var colors = generateColor(newPollOptionsColors.length, \"hex\");\n    _COLORS = colors;\n\n    for (var i = 0; i < newPollOptionsColors.length; i++) {\n        $(newPollOptionsColors[i]).css(\"background\", colors[i]).text(colors[i]);\n    }\n})();\n\n//Add option when creating new poll\naddOptionBtn.on(\"click\", function () {\n    options++;\n    var tempColor = generateColor(1, \"hex\");\n    _COLORS.push(tempColor);\n\n    newPollOptions.append(generateNewOptionString(tempColor));\n\n    if (disabled) {\n        disabled = false;\n        removeOptionBtn.attr(\"disabled\", false);\n    }\n});\n//Remove option when creating new poll\nremoveOptionBtn.on(\"click\", function () {\n    if (options > 2) {\n        options--;\n        newPollOptions.children().last().remove();\n        _COLORS.pop();\n\n        if (options == 2) {\n            disabled = true;\n            removeOptionBtn.attr(\"disabled\", true);\n        }\n    }\n});\n\nfunction getColors() {\n    return _COLORS;\n}\n\nfunction generateNewOptionString(color) {\n    var num = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : options;\n\n    return \"<div class=\\\"new-poll-option d-flex\\\">\" + \"<div class=\\\"new-poll-option-colorBox-outer\\\">\" + \"<div class=\\\"new-poll-option-colorBox-inner\\\" data-color-number=\" + (num - 1) + \" style=\\\"background:\" + color + \"\\\">\" + color + \"</div>\" + \"</div>\" + \"<input class=\\\"form-control\\\" placeholder=\\\"Option \" + num + \"\\\" name=\\\"option\" + num + \"\\\">\" + \"</div>\";\n}\n\nfunction bindSetup() {\n    $(\"#newPollOptions\").on(\"click\", \".new-poll-option-colorBox-outer\", function (e) {\n\n        newColorInput.activate();\n\n        var positionTop = $(e.currentTarget).position().top;\n        newColorInput.setPositionY(positionTop);\n\n        e.stopPropagation();\n    });\n\n    $(document).on(\"click\", function (e) {\n\n        newColorInput.disable();\n\n        e.stopPropagation();\n    });\n}\n\nexport { getColors };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/newPollOptions.js\n// module id = 0\n// module chunks = 0","/* global $ */\nvar newPollForm = $(\"#newPollForm\");\n\nimport { getColors } from \"./newPollOptions\";\n\nnewPollForm.on(\"submit\", function (e) {\n    //To prevent reload\n    e.preventDefault();\n\n    //Get data from Form\n    var data = newPollForm.serializeArray();\n\n    //Extract options from Form\n    var options = [];\n    //begins at 1 to skip the title\n    for (var i = 1; i < data.length; i++) {\n        options.push(data[i].value);\n    }\n\n    //Generate colors, data.length-1 here is to subtract title from length\n\n    data = {\n        title: data[0].value,\n        options: options,\n        colors: getColors()\n    };\n\n    //Send data\n    $.ajax({\n        type: \"POST\",\n        url: \"/poll\",\n        data: data,\n        dataType: \"json\",\n        success: function success(data) {\n            // Data here is response from server\n            if (typeof data.redirect === \"string\") {\n                // redirect \n                window.location = data.redirect;\n            }\n        }\n\n    });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/newPollPost.js\n// module id = 1\n// module chunks = 0","/* global poll */\n\nimport Chart from \"chart.js/dist/Chart.min.js\";\n\n(function () {\n\n    var ctx = document.getElementById(\"myChart\");\n    //check if myChart exists (it only exists in page that shows chart)\n    if (ctx != null) {\n\n        var jsPoll = poll;\n\n        var data = {\n            labels: jsPoll.options,\n            datasets: [{\n                data: jsPoll.results,\n                backgroundColor: jsPoll.colors,\n                hoverBackgroundColor: jsPoll.colors\n            }]\n        };\n        new Chart(ctx.getContext(\"2d\"), {\n            type: \"doughnut\",\n            data: data,\n            options: {}\n        });\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/showChart.js\n// module id = 2\n// module chunks = 0","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* global $ */\n\nvar colorInputBox = void 0;\n\nvar colorInputBoxString = \"<div class=\\\"color-input-box w-25\\\"><input class=\\\"form-control\\\" placeholder\\\"#fff / rgb(255,255,255)\\\" id=\\\"colorInput\\\"><button class=\\\"btn btn-block btn-primary\\\">Submit</button></div>\";\n\nvar colorInput = function () {\n    function colorInput() {\n        _classCallCheck(this, colorInput);\n\n        colorInputBox = $(colorInputBoxString).appendTo(\"body\").hide();\n        bind();\n        this.state = false;\n    }\n\n    _createClass(colorInput, [{\n        key: \"setPositionY\",\n        value: function setPositionY(y) {\n            if (!colorInputBox) {\n                return null;\n            }\n            colorInputBox.css(\"top\", y);\n        }\n    }, {\n        key: \"activate\",\n        value: function activate() {\n            if (this.state) return null;\n\n            colorInputBox.show();\n            this.state = true;\n        }\n    }, {\n        key: \"disable\",\n        value: function disable() {\n            if (!this.state) return null;\n\n            colorInputBox.hide();\n            this.state = false;\n        }\n    }]);\n\n    return colorInput;\n}();\n\nfunction bind() {\n    colorInputBox.on(\"click\", function (e) {\n        e.stopPropagation();\n    });\n}\n\nexport default colorInput;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/lib/colorInput.js\n// module id = 13\n// module chunks = 0","// n - amount of colors to make\nfunction generateColor() {\n    var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"hex\";\n\n    var Arr = [];\n\n    if (n <= 0) {\n        Arr.push(\"#000000\");\n    }\n\n    for (var i = 0; i < n; i++) {\n        var color = void 0;\n        var r = Math.round(Math.random() * 255);\n        var g = Math.round(Math.random() * 255);\n        var b = Math.round(Math.random() * 255);\n\n        if (format === \"hex\") {\n            r = fix1CharString(r.toString(16));\n            g = fix1CharString(g.toString(16));\n            b = fix1CharString(b.toString(16));\n            color = \"#\" + r + g + b;\n        } else if (format === \"rgb\") {\n            color = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n        } else if (format === \"rgba\") {\n            color = \"rgba(\" + r + \",\" + g + \",\" + b + \",0)\";\n        } else {\n            throw \"Sorry color format \" + format + \" was not recognized.\\nFormats available: hex, rgb, rgba\";\n        }\n\n        Arr.push(color);\n    }\n    // if requested amount of colors were 1(default) return color string, otherwise return array of color strings\n    return n === 1 ? Arr[0] : Arr;\n}\n\n// Checks if hex string has only 1 char if it does adds 0 to the end\nfunction fix1CharString(a) {\n    return a.length === 1 ? a + \"0\" : a;\n}\n\nexport { generateColor };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/lib/randomColor.js\n// module id = 14\n// module chunks = 0","import \"./showChart\";\nimport \"./newPollOptions\";\nimport \"./newPollPost\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/index.js\n// module id = 15\n// module chunks = 0"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;;;;","sourceRoot":""}